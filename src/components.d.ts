/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import {
  WorkingPatterns,
} from './shared/demo';
import {
  IVM,
} from './components/tag-pay-profile-final/tag-pay-profile-final';
import {
  WorkingPatternWeek,
} from './components/tag-pay-working-pattern/tag-pay-working-pattern.utils';

declare global {
  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;
  }
}



import {
  TagAccessLogo as TagAccessLogo
} from './components/tag-access-logo/tag-access-logo';

declare global {
  interface HTMLTagAccessLogoElement extends TagAccessLogo, HTMLStencilElement {
  }
  var HTMLTagAccessLogoElement: {
    prototype: HTMLTagAccessLogoElement;
    new (): HTMLTagAccessLogoElement;
  };
  interface HTMLElementTagNameMap {
    "tag-access-logo": HTMLTagAccessLogoElement;
  }
  interface ElementTagNameMap {
    "tag-access-logo": HTMLTagAccessLogoElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-access-logo": JSXElements.TagAccessLogoAttributes;
    }
  }
  namespace JSXElements {
    export interface TagAccessLogoAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  TagAvatar as TagAvatar
} from './components/tag-avatar/tag-avatar';

declare global {
  interface HTMLTagAvatarElement extends TagAvatar, HTMLStencilElement {
  }
  var HTMLTagAvatarElement: {
    prototype: HTMLTagAvatarElement;
    new (): HTMLTagAvatarElement;
  };
  interface HTMLElementTagNameMap {
    "tag-avatar": HTMLTagAvatarElement;
  }
  interface ElementTagNameMap {
    "tag-avatar": HTMLTagAvatarElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-avatar": JSXElements.TagAvatarAttributes;
    }
  }
  namespace JSXElements {
    export interface TagAvatarAttributes extends HTMLAttributes {
      placeholder?: string;
      size?: string;
      src?: string;
    }
  }
}


import {
  TagBadge as TagBadge
} from './components/tag-badge/tag-badge';

declare global {
  interface HTMLTagBadgeElement extends TagBadge, HTMLStencilElement {
  }
  var HTMLTagBadgeElement: {
    prototype: HTMLTagBadgeElement;
    new (): HTMLTagBadgeElement;
  };
  interface HTMLElementTagNameMap {
    "tag-badge": HTMLTagBadgeElement;
  }
  interface ElementTagNameMap {
    "tag-badge": HTMLTagBadgeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-badge": JSXElements.TagBadgeAttributes;
    }
  }
  namespace JSXElements {
    export interface TagBadgeAttributes extends HTMLAttributes {
      accent?: string;
      value?: string;
    }
  }
}


import {
  TagButton as TagButton
} from './components/tag-button/tag-button';

declare global {
  interface HTMLTagButtonElement extends TagButton, HTMLStencilElement {
  }
  var HTMLTagButtonElement: {
    prototype: HTMLTagButtonElement;
    new (): HTMLTagButtonElement;
  };
  interface HTMLElementTagNameMap {
    "tag-button": HTMLTagButtonElement;
  }
  interface ElementTagNameMap {
    "tag-button": HTMLTagButtonElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-button": JSXElements.TagButtonAttributes;
    }
  }
  namespace JSXElements {
    export interface TagButtonAttributes extends HTMLAttributes {
      accent?: string;
      size?: string;
    }
  }
}


import {
  TagCardDoc as TagCardDoc
} from './components/tag-card-doc/tag-card-doc';

declare global {
  interface HTMLTagCardDocElement extends TagCardDoc, HTMLStencilElement {
  }
  var HTMLTagCardDocElement: {
    prototype: HTMLTagCardDocElement;
    new (): HTMLTagCardDocElement;
  };
  interface HTMLElementTagNameMap {
    "tag-card-doc": HTMLTagCardDocElement;
  }
  interface ElementTagNameMap {
    "tag-card-doc": HTMLTagCardDocElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-card-doc": JSXElements.TagCardDocAttributes;
    }
  }
  namespace JSXElements {
    export interface TagCardDocAttributes extends HTMLAttributes {
      action?: string;
      heading?: string;
      when?: string;
      who?: string;
      whoref?: string;
    }
  }
}


import {
  TagCardDocFinance as TagCardFinance
} from './components/tag-card-finance/tag-card-finance';

declare global {
  interface HTMLTagCardFinanceElement extends TagCardFinance, HTMLStencilElement {
  }
  var HTMLTagCardFinanceElement: {
    prototype: HTMLTagCardFinanceElement;
    new (): HTMLTagCardFinanceElement;
  };
  interface HTMLElementTagNameMap {
    "tag-card-finance": HTMLTagCardFinanceElement;
  }
  interface ElementTagNameMap {
    "tag-card-finance": HTMLTagCardFinanceElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-card-finance": JSXElements.TagCardFinanceAttributes;
    }
  }
  namespace JSXElements {
    export interface TagCardFinanceAttributes extends HTMLAttributes {
      heading?: string;
      icon?: string;
      message?: string;
      status?: string;
    }
  }
}


import {
  TagCardHeader as TagCardHeader
} from './components/tag-card-header/tag-card-header';

declare global {
  interface HTMLTagCardHeaderElement extends TagCardHeader, HTMLStencilElement {
  }
  var HTMLTagCardHeaderElement: {
    prototype: HTMLTagCardHeaderElement;
    new (): HTMLTagCardHeaderElement;
  };
  interface HTMLElementTagNameMap {
    "tag-card-header": HTMLTagCardHeaderElement;
  }
  interface ElementTagNameMap {
    "tag-card-header": HTMLTagCardHeaderElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-card-header": JSXElements.TagCardHeaderAttributes;
    }
  }
  namespace JSXElements {
    export interface TagCardHeaderAttributes extends HTMLAttributes {
      heading?: string;
    }
  }
}


import {
  TagCardTask as TagCardTask
} from './components/tag-card-task/tag-card-task';

declare global {
  interface HTMLTagCardTaskElement extends TagCardTask, HTMLStencilElement {
  }
  var HTMLTagCardTaskElement: {
    prototype: HTMLTagCardTaskElement;
    new (): HTMLTagCardTaskElement;
  };
  interface HTMLElementTagNameMap {
    "tag-card-task": HTMLTagCardTaskElement;
  }
  interface ElementTagNameMap {
    "tag-card-task": HTMLTagCardTaskElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-card-task": JSXElements.TagCardTaskAttributes;
    }
  }
  namespace JSXElements {
    export interface TagCardTaskAttributes extends HTMLAttributes {
      accent?: string;
      avatarplaceholder?: string;
      avatarsrc?: string;
      heading?: string;
      subtitle?: string;
      when?: string;
      who?: string;
    }
  }
}


import {
  TagCardWidget as TagCardWidget
} from './components/tag-card-widget/tag-card-widget';

declare global {
  interface HTMLTagCardWidgetElement extends TagCardWidget, HTMLStencilElement {
  }
  var HTMLTagCardWidgetElement: {
    prototype: HTMLTagCardWidgetElement;
    new (): HTMLTagCardWidgetElement;
  };
  interface HTMLElementTagNameMap {
    "tag-card-widget": HTMLTagCardWidgetElement;
  }
  interface ElementTagNameMap {
    "tag-card-widget": HTMLTagCardWidgetElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-card-widget": JSXElements.TagCardWidgetAttributes;
    }
  }
  namespace JSXElements {
    export interface TagCardWidgetAttributes extends HTMLAttributes {
      accent?: string;
      applicationicon?: string;
      applicationimage?: string;
      applicationname?: string;
      buttonclick?: (e: Event) => void;
      buttonicon?: string;
      buttontext?: string;
      description?: string;
      value?: string;
    }
  }
}


import {
  TagCard as TagCard
} from './components/tag-card/tag-card';

declare global {
  interface HTMLTagCardElement extends TagCard, HTMLStencilElement {
  }
  var HTMLTagCardElement: {
    prototype: HTMLTagCardElement;
    new (): HTMLTagCardElement;
  };
  interface HTMLElementTagNameMap {
    "tag-card": HTMLTagCardElement;
  }
  interface ElementTagNameMap {
    "tag-card": HTMLTagCardElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-card": JSXElements.TagCardAttributes;
    }
  }
  namespace JSXElements {
    export interface TagCardAttributes extends HTMLAttributes {
      accent?: string;
    }
  }
}


import {
  TagDatepicker as TagDatepicker
} from './components/tag-datepicker/tag-datepicker';

declare global {
  interface HTMLTagDatepickerElement extends TagDatepicker, HTMLStencilElement {
  }
  var HTMLTagDatepickerElement: {
    prototype: HTMLTagDatepickerElement;
    new (): HTMLTagDatepickerElement;
  };
  interface HTMLElementTagNameMap {
    "tag-datepicker": HTMLTagDatepickerElement;
  }
  interface ElementTagNameMap {
    "tag-datepicker": HTMLTagDatepickerElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-datepicker": JSXElements.TagDatepickerAttributes;
    }
  }
  namespace JSXElements {
    export interface TagDatepickerAttributes extends HTMLAttributes {
      id?: string;
      label?: string;
      placeholder?: string;
      value?: string;
    }
  }
}


import {
  TagDemoWorkingPattern as TagDemoWorkingPattern
} from './components/tag-demo-working-pattern/tag-demo-working-pattern';

declare global {
  interface HTMLTagDemoWorkingPatternElement extends TagDemoWorkingPattern, HTMLStencilElement {
  }
  var HTMLTagDemoWorkingPatternElement: {
    prototype: HTMLTagDemoWorkingPatternElement;
    new (): HTMLTagDemoWorkingPatternElement;
  };
  interface HTMLElementTagNameMap {
    "tag-demo-working-pattern": HTMLTagDemoWorkingPatternElement;
  }
  interface ElementTagNameMap {
    "tag-demo-working-pattern": HTMLTagDemoWorkingPatternElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-demo-working-pattern": JSXElements.TagDemoWorkingPatternAttributes;
    }
  }
  namespace JSXElements {
    export interface TagDemoWorkingPatternAttributes extends HTMLAttributes {
      workingPatterns?: WorkingPatterns;
    }
  }
}


import {
  TagFormGroupSelect as TagFormGroupSelect
} from './components/tag-form-group-select/tag-form-group-select';

declare global {
  interface HTMLTagFormGroupSelectElement extends TagFormGroupSelect, HTMLStencilElement {
  }
  var HTMLTagFormGroupSelectElement: {
    prototype: HTMLTagFormGroupSelectElement;
    new (): HTMLTagFormGroupSelectElement;
  };
  interface HTMLElementTagNameMap {
    "tag-form-group-select": HTMLTagFormGroupSelectElement;
  }
  interface ElementTagNameMap {
    "tag-form-group-select": HTMLTagFormGroupSelectElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-form-group-select": JSXElements.TagFormGroupSelectAttributes;
    }
  }
  namespace JSXElements {
    export interface TagFormGroupSelectAttributes extends HTMLAttributes {
      label?: string;
    }
  }
}


import {
  TagFormGroup as TagFormGroup
} from './components/tag-form-group/tag-form-group';

declare global {
  interface HTMLTagFormGroupElement extends TagFormGroup, HTMLStencilElement {
  }
  var HTMLTagFormGroupElement: {
    prototype: HTMLTagFormGroupElement;
    new (): HTMLTagFormGroupElement;
  };
  interface HTMLElementTagNameMap {
    "tag-form-group": HTMLTagFormGroupElement;
  }
  interface ElementTagNameMap {
    "tag-form-group": HTMLTagFormGroupElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-form-group": JSXElements.TagFormGroupAttributes;
    }
  }
  namespace JSXElements {
    export interface TagFormGroupAttributes extends HTMLAttributes {
      label?: string;
      placeholder?: string;
      value?: string;
    }
  }
}


import {
  TagFormGroup as TagForm
} from './components/tag-form/tag-form';

declare global {
  interface HTMLTagFormElement extends TagForm, HTMLStencilElement {
  }
  var HTMLTagFormElement: {
    prototype: HTMLTagFormElement;
    new (): HTMLTagFormElement;
  };
  interface HTMLElementTagNameMap {
    "tag-form": HTMLTagFormElement;
  }
  interface ElementTagNameMap {
    "tag-form": HTMLTagFormElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-form": JSXElements.TagFormAttributes;
    }
  }
  namespace JSXElements {
    export interface TagFormAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  TagIconSet as TagIconSet
} from './components/tag-icon-set/tag-icon-set';

declare global {
  interface HTMLTagIconSetElement extends TagIconSet, HTMLStencilElement {
  }
  var HTMLTagIconSetElement: {
    prototype: HTMLTagIconSetElement;
    new (): HTMLTagIconSetElement;
  };
  interface HTMLElementTagNameMap {
    "tag-icon-set": HTMLTagIconSetElement;
  }
  interface ElementTagNameMap {
    "tag-icon-set": HTMLTagIconSetElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-icon-set": JSXElements.TagIconSetAttributes;
    }
  }
  namespace JSXElements {
    export interface TagIconSetAttributes extends HTMLAttributes {
      accent?: string;
      icon?: string;
    }
  }
}


import {
  TagInputCheckbox as TagInputCheckbox
} from './components/tag-input-checkbox/tag-input-checkbox';

declare global {
  interface HTMLTagInputCheckboxElement extends TagInputCheckbox, HTMLStencilElement {
  }
  var HTMLTagInputCheckboxElement: {
    prototype: HTMLTagInputCheckboxElement;
    new (): HTMLTagInputCheckboxElement;
  };
  interface HTMLElementTagNameMap {
    "tag-input-checkbox": HTMLTagInputCheckboxElement;
  }
  interface ElementTagNameMap {
    "tag-input-checkbox": HTMLTagInputCheckboxElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-input-checkbox": JSXElements.TagInputCheckboxAttributes;
    }
  }
  namespace JSXElements {
    export interface TagInputCheckboxAttributes extends HTMLAttributes {
      checked?: boolean;
      label?: string;
    }
  }
}


import {
  TagInputGroup as TagInputGroup
} from './components/tag-input-group/tag-input-group';

declare global {
  interface HTMLTagInputGroupElement extends TagInputGroup, HTMLStencilElement {
  }
  var HTMLTagInputGroupElement: {
    prototype: HTMLTagInputGroupElement;
    new (): HTMLTagInputGroupElement;
  };
  interface HTMLElementTagNameMap {
    "tag-input-group": HTMLTagInputGroupElement;
  }
  interface ElementTagNameMap {
    "tag-input-group": HTMLTagInputGroupElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-input-group": JSXElements.TagInputGroupAttributes;
    }
  }
  namespace JSXElements {
    export interface TagInputGroupAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  TagInput as TagInput
} from './components/tag-input/tag-input';

declare global {
  interface HTMLTagInputElement extends TagInput, HTMLStencilElement {
  }
  var HTMLTagInputElement: {
    prototype: HTMLTagInputElement;
    new (): HTMLTagInputElement;
  };
  interface HTMLElementTagNameMap {
    "tag-input": HTMLTagInputElement;
  }
  interface ElementTagNameMap {
    "tag-input": HTMLTagInputElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-input": JSXElements.TagInputAttributes;
    }
  }
  namespace JSXElements {
    export interface TagInputAttributes extends HTMLAttributes {
      disabled?: boolean;
      placeholder?: string;
    }
  }
}


import {
  TagKGrid as TagKGrid
} from './components/tag-k-grid/tag-k-grid';

declare global {
  interface HTMLTagKGridElement extends TagKGrid, HTMLStencilElement {
  }
  var HTMLTagKGridElement: {
    prototype: HTMLTagKGridElement;
    new (): HTMLTagKGridElement;
  };
  interface HTMLElementTagNameMap {
    "tag-k-grid": HTMLTagKGridElement;
  }
  interface ElementTagNameMap {
    "tag-k-grid": HTMLTagKGridElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-k-grid": JSXElements.TagKGridAttributes;
    }
  }
  namespace JSXElements {
    export interface TagKGridAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  TagKendoFormGroupSelect as TagKendoFormGroupSelect
} from './components/tag-kendo-form-group-select/tag-kendo-form-group-select';

declare global {
  interface HTMLTagKendoFormGroupSelectElement extends TagKendoFormGroupSelect, HTMLStencilElement {
  }
  var HTMLTagKendoFormGroupSelectElement: {
    prototype: HTMLTagKendoFormGroupSelectElement;
    new (): HTMLTagKendoFormGroupSelectElement;
  };
  interface HTMLElementTagNameMap {
    "tag-kendo-form-group-select": HTMLTagKendoFormGroupSelectElement;
  }
  interface ElementTagNameMap {
    "tag-kendo-form-group-select": HTMLTagKendoFormGroupSelectElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-kendo-form-group-select": JSXElements.TagKendoFormGroupSelectAttributes;
    }
  }
  namespace JSXElements {
    export interface TagKendoFormGroupSelectAttributes extends HTMLAttributes {
      $?: any;
      label?: string;
      options?: any[];
      value?: string;
    }
  }
}


import {
  TagLayoutFlexColumns as TagLayoutFlexColumns
} from './components/tag-layout-flex-columns/tag-layout-flex-columns';

declare global {
  interface HTMLTagLayoutFlexColumnsElement extends TagLayoutFlexColumns, HTMLStencilElement {
  }
  var HTMLTagLayoutFlexColumnsElement: {
    prototype: HTMLTagLayoutFlexColumnsElement;
    new (): HTMLTagLayoutFlexColumnsElement;
  };
  interface HTMLElementTagNameMap {
    "tag-layout-flex-columns": HTMLTagLayoutFlexColumnsElement;
  }
  interface ElementTagNameMap {
    "tag-layout-flex-columns": HTMLTagLayoutFlexColumnsElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-layout-flex-columns": JSXElements.TagLayoutFlexColumnsAttributes;
    }
  }
  namespace JSXElements {
    export interface TagLayoutFlexColumnsAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  TagLayoutSidenav as TagLayoutSidenav
} from './components/tag-layout-sidenav/tag-layout-sidenav';

declare global {
  interface HTMLTagLayoutSidenavElement extends TagLayoutSidenav, HTMLStencilElement {
  }
  var HTMLTagLayoutSidenavElement: {
    prototype: HTMLTagLayoutSidenavElement;
    new (): HTMLTagLayoutSidenavElement;
  };
  interface HTMLElementTagNameMap {
    "tag-layout-sidenav": HTMLTagLayoutSidenavElement;
  }
  interface ElementTagNameMap {
    "tag-layout-sidenav": HTMLTagLayoutSidenavElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-layout-sidenav": JSXElements.TagLayoutSidenavAttributes;
    }
  }
  namespace JSXElements {
    export interface TagLayoutSidenavAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  TagLayout as TagLayout
} from './components/tag-layout/tag-layout';

declare global {
  interface HTMLTagLayoutElement extends TagLayout, HTMLStencilElement {
  }
  var HTMLTagLayoutElement: {
    prototype: HTMLTagLayoutElement;
    new (): HTMLTagLayoutElement;
  };
  interface HTMLElementTagNameMap {
    "tag-layout": HTMLTagLayoutElement;
  }
  interface ElementTagNameMap {
    "tag-layout": HTMLTagLayoutElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-layout": JSXElements.TagLayoutAttributes;
    }
  }
  namespace JSXElements {
    export interface TagLayoutAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  TagMainHeader as TagMainHeader
} from './components/tag-main-header/tag-main-header';

declare global {
  interface HTMLTagMainHeaderElement extends TagMainHeader, HTMLStencilElement {
  }
  var HTMLTagMainHeaderElement: {
    prototype: HTMLTagMainHeaderElement;
    new (): HTMLTagMainHeaderElement;
  };
  interface HTMLElementTagNameMap {
    "tag-main-header": HTMLTagMainHeaderElement;
  }
  interface ElementTagNameMap {
    "tag-main-header": HTMLTagMainHeaderElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-main-header": JSXElements.TagMainHeaderAttributes;
    }
  }
  namespace JSXElements {
    export interface TagMainHeaderAttributes extends HTMLAttributes {
      accent?: string;
    }
  }
}


import {
  TagButton as TagMenuItem
} from './components/tag-menu-item/tag-menu-item';

declare global {
  interface HTMLTagMenuItemElement extends TagMenuItem, HTMLStencilElement {
  }
  var HTMLTagMenuItemElement: {
    prototype: HTMLTagMenuItemElement;
    new (): HTMLTagMenuItemElement;
  };
  interface HTMLElementTagNameMap {
    "tag-menu-item": HTMLTagMenuItemElement;
  }
  interface ElementTagNameMap {
    "tag-menu-item": HTMLTagMenuItemElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-menu-item": JSXElements.TagMenuItemAttributes;
    }
  }
  namespace JSXElements {
    export interface TagMenuItemAttributes extends HTMLAttributes {
      i?: string;
    }
  }
}


import {
  TagMessage as TagMessage
} from './components/tag-message/tag-message';

declare global {
  interface HTMLTagMessageElement extends TagMessage, HTMLStencilElement {
  }
  var HTMLTagMessageElement: {
    prototype: HTMLTagMessageElement;
    new (): HTMLTagMessageElement;
  };
  interface HTMLElementTagNameMap {
    "tag-message": HTMLTagMessageElement;
  }
  interface ElementTagNameMap {
    "tag-message": HTMLTagMessageElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-message": JSXElements.TagMessageAttributes;
    }
  }
  namespace JSXElements {
    export interface TagMessageAttributes extends HTMLAttributes {
      accent?: string;
    }
  }
}


import {
  TagNavbar as TagNavbar
} from './components/tag-navbar/tag-navbar';

declare global {
  interface HTMLTagNavbarElement extends TagNavbar, HTMLStencilElement {
  }
  var HTMLTagNavbarElement: {
    prototype: HTMLTagNavbarElement;
    new (): HTMLTagNavbarElement;
  };
  interface HTMLElementTagNameMap {
    "tag-navbar": HTMLTagNavbarElement;
  }
  interface ElementTagNameMap {
    "tag-navbar": HTMLTagNavbarElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-navbar": JSXElements.TagNavbarAttributes;
    }
  }
  namespace JSXElements {
    export interface TagNavbarAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  TagPayProfileFinal as TagPayProfileFinal
} from './components/tag-pay-profile-final/tag-pay-profile-final';

declare global {
  interface HTMLTagPayProfileFinalElement extends TagPayProfileFinal, HTMLStencilElement {
  }
  var HTMLTagPayProfileFinalElement: {
    prototype: HTMLTagPayProfileFinalElement;
    new (): HTMLTagPayProfileFinalElement;
  };
  interface HTMLElementTagNameMap {
    "tag-pay-profile-final": HTMLTagPayProfileFinalElement;
  }
  interface ElementTagNameMap {
    "tag-pay-profile-final": HTMLTagPayProfileFinalElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-pay-profile-final": JSXElements.TagPayProfileFinalAttributes;
    }
  }
  namespace JSXElements {
    export interface TagPayProfileFinalAttributes extends HTMLAttributes {
      vm?: IVM;
    }
  }
}


import {
  TagPayProfileStore as TagPayProfileStore
} from './components/tag-pay-profile-store/tag-pay-profile-store';

declare global {
  interface HTMLTagPayProfileStoreElement extends TagPayProfileStore, HTMLStencilElement {
  }
  var HTMLTagPayProfileStoreElement: {
    prototype: HTMLTagPayProfileStoreElement;
    new (): HTMLTagPayProfileStoreElement;
  };
  interface HTMLElementTagNameMap {
    "tag-pay-profile-store": HTMLTagPayProfileStoreElement;
  }
  interface ElementTagNameMap {
    "tag-pay-profile-store": HTMLTagPayProfileStoreElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-pay-profile-store": JSXElements.TagPayProfileStoreAttributes;
    }
  }
  namespace JSXElements {
    export interface TagPayProfileStoreAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  TagPayWorkingPattern as TagPayWorkingPattern
} from './components/tag-pay-working-pattern/tag-pay-working-pattern';

declare global {
  interface HTMLTagPayWorkingPatternElement extends TagPayWorkingPattern, HTMLStencilElement {
  }
  var HTMLTagPayWorkingPatternElement: {
    prototype: HTMLTagPayWorkingPatternElement;
    new (): HTMLTagPayWorkingPatternElement;
  };
  interface HTMLElementTagNameMap {
    "tag-pay-working-pattern": HTMLTagPayWorkingPatternElement;
  }
  interface ElementTagNameMap {
    "tag-pay-working-pattern": HTMLTagPayWorkingPatternElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-pay-working-pattern": JSXElements.TagPayWorkingPatternAttributes;
    }
  }
  namespace JSXElements {
    export interface TagPayWorkingPatternAttributes extends HTMLAttributes {
      value?: WorkingPatternWeek;
    }
  }
}


import {
  TagPayWpWeek as TagPayWpWeek
} from './components/tag-pay-wp-week/tag-pay-wp-week';

declare global {
  interface HTMLTagPayWpWeekElement extends TagPayWpWeek, HTMLStencilElement {
  }
  var HTMLTagPayWpWeekElement: {
    prototype: HTMLTagPayWpWeekElement;
    new (): HTMLTagPayWpWeekElement;
  };
  interface HTMLElementTagNameMap {
    "tag-pay-wp-week": HTMLTagPayWpWeekElement;
  }
  interface ElementTagNameMap {
    "tag-pay-wp-week": HTMLTagPayWpWeekElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-pay-wp-week": JSXElements.TagPayWpWeekAttributes;
    }
  }
  namespace JSXElements {
    export interface TagPayWpWeekAttributes extends HTMLAttributes {
      workingPatterns?: WorkingPatterns;
    }
  }
}


import {
  TagPayWp as TagPayWp
} from './components/tag-pay-wp/tag-pay-wp';

declare global {
  interface HTMLTagPayWpElement extends TagPayWp, HTMLStencilElement {
  }
  var HTMLTagPayWpElement: {
    prototype: HTMLTagPayWpElement;
    new (): HTMLTagPayWpElement;
  };
  interface HTMLElementTagNameMap {
    "tag-pay-wp": HTMLTagPayWpElement;
  }
  interface ElementTagNameMap {
    "tag-pay-wp": HTMLTagPayWpElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-pay-wp": JSXElements.TagPayWpAttributes;
    }
  }
  namespace JSXElements {
    export interface TagPayWpAttributes extends HTMLAttributes {
      dayofweek?: string;
      id?: string;
      value?: string;
    }
  }
}


import {
  TagProfile as TagProfile
} from './components/tag-profile/tag-profile';

declare global {
  interface HTMLTagProfileElement extends TagProfile, HTMLStencilElement {
  }
  var HTMLTagProfileElement: {
    prototype: HTMLTagProfileElement;
    new (): HTMLTagProfileElement;
  };
  interface HTMLElementTagNameMap {
    "tag-profile": HTMLTagProfileElement;
  }
  interface ElementTagNameMap {
    "tag-profile": HTMLTagProfileElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-profile": JSXElements.TagProfileAttributes;
    }
  }
  namespace JSXElements {
    export interface TagProfileAttributes extends HTMLAttributes {
      dob?: string;
      gender?: string;
      name?: string;
      nationality?: string;
      src?: string;
    }
  }
}


import {
  TagTabs as TagTabs
} from './components/tag-tabs/tag-tabs';

declare global {
  interface HTMLTagTabsElement extends TagTabs, HTMLStencilElement {
  }
  var HTMLTagTabsElement: {
    prototype: HTMLTagTabsElement;
    new (): HTMLTagTabsElement;
  };
  interface HTMLElementTagNameMap {
    "tag-tabs": HTMLTagTabsElement;
  }
  interface ElementTagNameMap {
    "tag-tabs": HTMLTagTabsElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-tabs": JSXElements.TagTabsAttributes;
    }
  }
  namespace JSXElements {
    export interface TagTabsAttributes extends HTMLAttributes {
      tabs?: any[];
    }
  }
}


import {
  TagText as TagText
} from './components/tag-text/tag-text';

declare global {
  interface HTMLTagTextElement extends TagText, HTMLStencilElement {
  }
  var HTMLTagTextElement: {
    prototype: HTMLTagTextElement;
    new (): HTMLTagTextElement;
  };
  interface HTMLElementTagNameMap {
    "tag-text": HTMLTagTextElement;
  }
  interface ElementTagNameMap {
    "tag-text": HTMLTagTextElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-text": JSXElements.TagTextAttributes;
    }
  }
  namespace JSXElements {
    export interface TagTextAttributes extends HTMLAttributes {
      inline?: boolean;
      type?: string;
    }
  }
}


import {
  TagThreeColLayout as TagThreeColLayout
} from './components/tag-three-col-layout/tag-three-col-layout';

declare global {
  interface HTMLTagThreeColLayoutElement extends TagThreeColLayout, HTMLStencilElement {
  }
  var HTMLTagThreeColLayoutElement: {
    prototype: HTMLTagThreeColLayoutElement;
    new (): HTMLTagThreeColLayoutElement;
  };
  interface HTMLElementTagNameMap {
    "tag-three-col-layout": HTMLTagThreeColLayoutElement;
  }
  interface ElementTagNameMap {
    "tag-three-col-layout": HTMLTagThreeColLayoutElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "tag-three-col-layout": JSXElements.TagThreeColLayoutAttributes;
    }
  }
  namespace JSXElements {
    export interface TagThreeColLayoutAttributes extends HTMLAttributes {
      p1?: string;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
